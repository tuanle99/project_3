{"version":3,"sources":["images/gardenista-3.png","components/Footer/index.js","utils/globalState.js","utils/API.js","components/Header/index.js","components/Weather/index.js","components/Grid/index.js","components/NeedWater/index.js","pages/Home.js","pages/Landing.js","pages/Journal.js","components/PlantCard/index.js","components/SaveList/index.js","components/PlantSide/index.js","pages/PlantCards.js","components/AllCardsItem/index.js","components/AllCards/index.js","pages/PlantsAll.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Footer","className","UserContext","createContext","userId","username","Provider","reducer","state","action","type","UserProvider","value","props","useReducer","dispatch","useUserContext","useContext","getPlants","axios","get","getPlant","id","deletePlant","delete","savePlant","plantData","post","updateUserPlant","data","put","getWeather","lat","long","getUsers","getUser","createUser","newUser","login","user","auth","logout","Header","isLoggin","useHistory","logOut","localStorage","setItem","API","then","response","logged_in","window","location","pathname","catch","err","console","log","useEffect","style","backgroundColor","href","src","img","alt","width","height","color","onClick","WeatherDiv","children","marginTop","WeatherCard","length","slice","map","day","key","dt","margin","fontSize","Date","toLocaleDateString","weekday","temp","humidity","pop","textAlign","padding","Container","fluid","Row","Col","size","split","join","NeedWater","WaterCard","plant","image","maxWidth","name","class","botanical_name","Home","today","useState","weather","setWeather","water","setWater","getItem","initUser","a","res","getDay","plants","next_water","substr","d","month","getMonth","getDate","year","getFullYear","initHome","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","daily","Landing","history","userRef","useRef","passRef","error","setError","push","borderTop","display","aria-label","aria-describedby","placeholder","ref","Button","variant","e","preventDefault","current","password","border","borderRadius","handleHomePage","_id","status","message","Journal","JournalSet","setJournalSet","title","note","JournalSelect","setJournalSelect","updateTitleRef","updateNoteRef","journals","selectJournal","target","find","element","maxLength","updateUserJournal","PlantCard","usda_zones","description","number","waterRef","updatePlant","SaveList","plantState","index","Sidebar","PlantCards","savedPlants","setSavedPlants","currentUser","setCurrentUser","AllCardsItem","bgColor","text","setState","AllCards","PlantsAll","allPlants","setAllPlants","currentPlant","fontStyle","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7448bb47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gardenista-3.54f29a33.png\";","import React from 'react';\nimport \"../Footer/style.css\"\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer mt-auto py-3\">\n      <div className=\"container\">\n        <span>Proudly Made with React | 2021</span>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;","import React, { createContext, useReducer, useContext } from \"react\";\n\nconst UserContext = createContext({\n  userId: \"\",\n  username: \"\",\n});\nconst { Provider } = UserContext;\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"loggin\":\n      return {\n        userId: action.userId,\n        username: action.username,\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction UserProvider({ value = {}, ...props }) {\n  const [state, dispatch] = useReducer(reducer, {});\n\n  return <Provider value={[state, dispatch]} {...props} />;\n}\n\nfunction useUserContext() {\n  return useContext(UserContext);\n}\nexport { UserProvider, useUserContext };\n","import axios from \"axios\";\n\nexport default {\n  // Gets all plants\n  getPlants: function () {\n    return axios.get(\"/api/plants\");\n  },\n  // Gets the plant with the given id\n  getPlant: function (id) {\n    return axios.get(\"/api/plants/\" + id);\n  },\n  // Deletes the plant with the given id\n  deletePlant: function (id) {\n    return axios.delete(\"/api/plants/\" + id);\n  },\n  // Saves a plant to the database\n  savePlant: function (plantData) {\n    return axios.post(\"/api/plants\", plantData);\n  },\n\n  updateUserPlant: function (id, data) {\n    return axios.put(\"/api/user/\" + id, data);\n  },\n\n  getWeather: function (lat, long) {\n    return axios.get(\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&exclude=current,minutely,hourly,alerts&units=imperial&appid=c1ba9a1d8d332b1ef324e57e7f47dbdf`\n    );\n  },\n\n  getUsers: function () {\n    return axios.get(\"/api/user/\");\n  },\n\n  getUser: function (id) {\n    return axios.get(\"/api/user/\" + id);\n  },\n  createUser: function (newUser) {\n    return axios.post(\"/api/user/\", newUser);\n  },\n  login: function (user) {\n    return axios.post(\"/api/user/login\", user);\n  },\n  auth: function () {\n    return axios.get(\"/api/user/auth\");\n  },\n  logout: function () {\n    return axios.post(\"/api/user/logout\");\n  },\n};\n","import React, { useEffect } from \"react\";\nimport { useUserContext } from \"../../utils/globalState\";\nimport img from \"../../images/gardenista-3.png\";\nimport API from \"../../utils/API\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Header = () => {\n  let isLoggin = true;\n  const history = useHistory();\n\n  function logOut() {\n    localStorage.setItem(\"isLoggin\", false);\n    localStorage.setItem(\"user\", \"\");\n    API.logout()\n      .then((response) => {\n        isLoggin = response.data.logged_in;\n        localStorage.setItem('isLoggin', false)\n        localStorage.setItem('user', null)\n        window.location.pathname = '/';\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  }\n\n  useEffect(() => {\n    checkLogin();\n  }, []);\n\n  function checkLogin() {\n    API.auth()\n      .then((response) => {\n        console.log(response)\n        return response.data.logged_in;\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  }\n\n  function authenticate() {\n    if (isLoggin) {\n      return (\n        <nav\n          className=\"navbar navbar-expand-lg navbar-light\"\n          style={{ backgroundColor: \"#5b7444\" }}\n        >\n          <div className=\"container-fluid\">\n            <a className=\"navbar-brand\" href=\"/home\">\n              <img src={img} alt=\"\" width=\"75\" height=\"93.75\" />\n            </a>\n            <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li className=\"nav-item\">\n                  <a\n                    className=\"nav-link\"\n                    style={{ color: \"white\" }}\n                    href=\"/cards\"\n                  >\n                    Your Plants\n                  </a>\n                </li>\n                <li className=\"nav-item\">\n                  <a\n                    className=\"nav-link\"\n                    style={{ color: \"white\" }}\n                    href=\"/plants\"\n                  >\n                    Add Plants\n                  </a>\n                </li>\n                <li className=\"nav-item\">\n                  <a\n                    className=\"nav-link\"\n                    style={{ color: \"white\" }}\n                    href=\"/journal\"\n                  >\n                    Journal\n                  </a>\n                </li>\n              </ul>\n              <span className=\"nav-item\">\n                <a\n                  className=\"nav-link\"\n                  style={{ color: \"white\" }}\n                  onClick={logOut}\n                >\n                  Log Out\n                </a>\n              </span>\n            </div>\n          </div>\n        </nav>\n      );\n    } else {\n      return (\n        <nav\n          className=\"navbar navbar-expand-lg navbar-light\"\n          style={{ backgroundColor: \"#5b7444\" }}\n        >\n          <div className=\"container-fluid\">\n            <a className=\"navbar-brand\">\n              <img src={img} alt=\"\" width=\"75\" height=\"93.75\" />\n            </a>\n          </div>\n        </nav>\n      );\n    }\n  }\n\n  return authenticate();\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nexport function WeatherDiv({ children }) {\n  return (\n    <div\n      className=\"weather-div\"\n      style={{ width: \"100%\", height: \"100%\", marginTop: \"90px\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport function WeatherCard(props) {\n  if (props.data.length > 0) {\n    return (\n      <div className=\"row\">\n        {props.data.slice(0, 5).map((day) => (\n          <div className=\"col-lg-4 col-md-12 col-sm-12\">\n            <div\n              key={day.dt}\n              className=\"card\"\n              style={{\n                width: \"90%\",\n                margin: \"20px\",\n                backgroundColor: \"#A3C586\",\n              }}\n            >\n              <div className=\"card-body\">\n                <h5 className=\"card-title\" style={{ fontSize: \"10pt\" }}>\n                  {new Date(day.dt * 1000).toLocaleDateString(\"en-US\", {\n                    weekday: \"long\",\n                  })}\n                </h5>\n                <p className=\"card-text\" style={{ fontSize: \"9pt\" }}>\n                  Temperature: {day.temp.day}°\n                </p>\n                <p className=\"card-text\" style={{ fontSize: \"9pt\" }}>\n                  Humidity: {day.humidity}%\n                </p>\n                <p className=\"card-text\" style={{ fontSize: \"9pt\" }}>\n                  Chance of rain: {day.pop}%\n                </p>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  } else {\n    return (\n      <h3 style={{ textAlign: \"center\", padding: \"123px\" }}>\n        Loading weather...\n      </h3>\n    );\n  }\n}\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}","import React from 'react';\nimport './style.css'\n\nexport function NeedWater({ children }) {\n  return (\n    <div style={{height: '70%'}} className=\"needs-water\">\n      {children}\n    </div>\n  )\n}\n\nexport function WaterCard(props) {\n  return (\n    <div>\n      {props.data.map((plant) => {\n        return (<div>\n          <div style={{width: \"90%\", margin: '20px'}} key={plant.id} className=\"card\">\n            <div className=\"card-body plant-card\">\n              <img src={plant.image} style={{ maxWidth: \"100px\" }} />\n              <h5 className=\"card-title\">{plant.name}</h5>\n              <h6 class=\"card-subtitle mb-2 text-muted\">{plant.botanical_name}</h6>\n            </div>\n          </div>\n        </div>\n        )\n      })}\n    </div>\n  )\n}","import React, { useEffect, useState } from \"react\";\nimport { WeatherDiv, WeatherCard } from \"../components/Weather\";\nimport API from \"../utils/API\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport { NeedWater, WaterCard } from \"../components/NeedWater\";\nimport { useUserContext } from \"../utils/globalState\";\n\nfunction Home() {\n  const [weather, setWeather] = useState([]);\n  const [water, setWater] = useState([]);\n  const [state] = useUserContext();\n  const id = localStorage.getItem('user');\n  let today;\n  let user = {}\n  let isLoggin = true;\n\n  useEffect(() => {\n    localStorage.setItem(\"isLoggin\", true);\n    isLoggin = localStorage.getItem(\"isLoggin\") === \"true\";\n    authenticate();\n    initHome();\n    loadWeather();\n  }, [state]);\n\n  function authenticate() {\n    if (isLoggin !== true) {\n      window.location.pathname = \"/\";\n    }\n  }\n\n  async function initUser() {\n    if (!localStorage.getItem(\"user\")) {\n      localStorage.setItem(\"user\", state.userId);\n    } else if (localStorage.getItem(\"user\") === \"undefined\") {\n      localStorage.setItem(\"user\", state.userId);\n    }\n    await API.getUser(id).then(res => user = (res.data))\n  }\n\n  function loadWeather() {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      const lat = position.coords.latitude;\n      const long = position.coords.longitude;\n      API.getWeather(lat, long).then((res) => {\n        setWeather(res.data.daily);\n      });\n    });\n  }\n\n  async function initHome() {\n    await initUser();\n    getDay();\n    user.plants.map((plant) => {\n      if (plant.next_water) {\n        if (plant.next_water.substr(0, 10) === today) {\n          setWater(water => [...water, plant])\n        }\n      }\n    })\n  }\n\n  function getDay() {\n    let d = new Date(),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    today = year + '-' + month  + '-' + day;\n  }\n  console.log(user)\n  return (\n    <Container>\n      <div className=\"row mb-5\">\n        <div className=\"col-sm-12 col-md-12 col-lg-4 \">\n          <p style={{ textAlign: \"center\", marginTop: \"23px\" }}>\n            Welcome, back!<br/>The plants that need watering today are:\n          </p>\n          <NeedWater>\n            <WaterCard\n              data={water}\n            />\n          </NeedWater>\n        </div>\n        <div className=\"col-sm-12 col-md-12 col-lg-8\">\n          <Row>\n            <WeatherDiv>\n              <WeatherCard data={weather} />\n            </WeatherDiv>\n          </Row>\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default Home;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport API from \"../utils/API\";\nimport { useHistory } from \"react-router-dom\";\nimport { useUserContext } from \"../utils/globalState\";\n\nfunction Landing() {\n  const history = useHistory();\n  const userRef = useRef();\n  const passRef = useRef();\n\n  const [error, setError] = useState(\"\");\n\n  const [state, dispatch] = useUserContext();\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    API.login({\n      username: userRef.current.value,\n      password: passRef.current.value,\n    })\n      .then((response) => {\n        console.log(response);\n        setError(\"\");\n        const user = {\n          userId: response.data.user._id,\n          username: response.data.user.username,\n        };\n        handleHomePage(user);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        if (err.response.status === 401) {\n          setError(err.response.data.message);\n        }\n      });\n  };\n\n  function handleHomePage(e) {\n    dispatch({\n      type: \"loggin\",\n      userId: e.userId,\n      username: e.username,\n    });\n    history.push(\"/home\");\n  }\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n    const newUser = {\n      username: userRef.current.value,\n      password: passRef.current.value,\n      plants: [],\n    };\n    API.createUser(newUser).catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"isLoggin\", false);\n    localStorage.setItem(\"user\", \"\");\n    checkUserLogin();\n  }, []);\n\n  function checkUserLogin() {\n    API.auth()\n      .then((response) => {\n        if (response.data && response.data.logged_in) history.push(\"/home\");\n      })\n      .catch((err) => console.log(err.response));\n  }\n\n  return (\n    <div className=\"container mt-5 mb-5\">\n      <h1 className=\"mt-2\">Welcome!</h1>\n      <div\n        style={{ height: 1, width: \"100%\", borderTop: \"1px solid gray\" }}\n        className=\"mt-4\"\n      >\n        {\" \"}\n      </div>\n      <div className=\"row\">\n        <div\n          className=\"col-lg-8 col-md-8 col-sm-12 mt-5\"\n          style={{ display: \"block\", textAlign: \"center\" }}\n        >\n          <h2 className=\"mt-4\">Plant Tracking</h2>\n          <p className=\"mt-4\">\n            Create individual plant cards to track each plant in your garden. We\n            provide templates to get started on most common plants, or you can\n            add your own!\n          </p>\n          <h2 className=\"mt-5\">Garden Journal</h2>\n          <p className=\"mt-4\">\n            Our bread-and-butter - the garden journal allows you to free-write\n            about your garden - things you’ve planted, watched grow, the\n            progress any plants have made, to-buy lists, garden plans, and\n            whatever else you want!\n          </p>\n          <h2 className=\"mt-5\">Calendar</h2>\n          <p className=\"mt-4\">\n            The calendar feature can help you track watering days or other\n            significant activities for your garden.\n          </p>\n        </div>\n        <div className=\"col-lg-4 col-md-4 col-sm-12\">\n          <div className=\"input-group input-group-sm mt-lg-5 \">\n            <input\n              type=\"text\"\n              className=\"form-control mt-lg-5 mt-md-5\"\n              aria-label=\"Small\"\n              aria-describedby=\"inputGroup-sizing-sm\"\n              placeholder=\"Username\"\n              ref={userRef}\n            />\n          </div>\n          <div class=\"input-group input-group-sm\">\n            <input\n              type=\"text\"\n              className=\"form-control mt-3 \"\n              aria-label=\"Small\"\n              aria-describedby=\"inputGroup-sizing-sm\"\n              placeholder=\"Password\"\n              ref={passRef}\n            />\n          </div>\n          <div>{error}</div>\n          <div className=\"text-right mt-3 mb-5\">\n            <Button variant=\"mr-2\" onClick={handleSignup}>\n              <u>Sign Up</u>\n            </Button>\n            <Button\n              variant=\"primary\"\n              style={{\n                backgroundColor: \"#5B7444\",\n                border: \"none\",\n                borderRadius: 0,\n              }}\n              onClick={handleLogin}\n            >\n              Log In\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Landing;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport Entry from \"../components/Entry\";\nimport { useUserContext } from \"../utils/globalState\";\nimport Button from \"react-bootstrap/Button\";\nimport API from \"../utils/API\";\n\nfunction Journal() {\n  const [state] = useUserContext();\n  let isLoggin = localStorage.getItem(\"isLoggin\") === \"true\";\n  let userId = localStorage.getItem(\"user\");\n  const [JournalSet, setJournalSet] = useState([]);\n  const [JournalSelect, setJournalSelect] = useState({\n    title: \"title\",\n    note: \"note\",\n  });\n  const updateTitleRef = useRef();\n  const updateNoteRef = useRef();\n\n  useEffect(() => {\n    authenticate();\n    loadJournal();\n  }, [state]);\n\n  function authenticate() {\n    if (!isLoggin) {\n      window.location.pathname = \"/\";\n    }\n  }\n\n  function loadJournal() {\n    API.getUser(userId)\n      .then((res) => {\n        setJournalSet(res.data.journals);\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  }\n\n  const selectJournal = (e) => {\n    e.preventDefault();\n    let value = e.target.value;\n\n    setJournalSelect(JournalSet.find((element) => element.title === value));\n  };\n\n  function saveJournal() {\n    API.updateUserJournal(userId, {\n      title: updateTitleRef.current.value,\n      note: updateNoteRef.current.value,\n    })\n      .then((res) => console.log(\"Successful POST to DB!\", res))\n      .catch((err) => console.log(\"this is the error\", err.response));\n  }\n\n  return (\n    <Container>\n      <div className=\"row mt-5\">\n        <div className=\"col-lg-4\" style={{ backgroundColor: \"orange\" }}>\n          {JournalSet.map((e) => {\n            return (\n              <Button\n                className=\"mt-3 mb-3 d-flex\"\n                style={{ width: \"100%\" }}\n                value={e.title}\n                onClick={selectJournal}\n              >\n                {e.title}\n              </Button>\n            );\n          })}\n        </div>\n        <div className=\"col-lg-8\">\n          <h3 className=\"justify-content-center d-flex\">Journal Entries</h3>\n          <div className=\"list-container\">\n            <div>\n              <input\n                className=\"note-title\"\n                placeholder={JournalSelect.title}\n                maxLength=\"28\"\n                type=\"text\"\n                ref={updateTitleRef}\n              />\n              <textarea\n                className=\"note-textarea\"\n                placeholder={JournalSelect.note}\n                ref={updateNoteRef}\n              ></textarea>\n            </div>\n          </div>\n\n          <Button className=\"mr-4\" onClick={saveJournal}>\n            Save\n          </Button>\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default Journal;\n","import React, { useRef } from \"react\";\nimport API from '../../utils/API';\nimport \"../PlantCard/style.css\"\n\nexport function PlantCard(props) {\n    const { name, botanical_name, height, usda_zones, image, description, number } = props\n    const user = localStorage.getItem('user');\n    const waterRef = useRef();\n\n    async function updatePlant() {\n        const plants = []\n        await API.getUser(user).then(res => plants.push(res.data.plants))\n        plants[0][number].next_water = waterRef.current.value\n        API.updateUserPlant(user, { plants: plants[0] }).then(res => console.log(res))\n    }\n\n    function onClick(e) {\n        e.preventDefault();\n        updatePlant();\n    }\n\n    return (\n        <div>\n            <div className=\"card border-warning\">\n                <div className=\"card-body plant-card\">\n                    <img src={image} style={{ maxWidth: \"100px\" }} />\n                    <h5 className=\"card-title\">{name}</h5>\n                    <h6 class=\"card-subtitle mb-2 text-muted\">{botanical_name}</h6>\n                    <p class=\"card-text\">Height: {height}</p>\n                    <p class=\"card-text\">USDA Zones: {usda_zones}</p>\n                    <p class=\"card-text\">{description}</p>\n                    <div className='form-water row g-3'>\n                        <input ref={waterRef} type='text' className='col-auto form-control' id='next-water' placeholder='Next Water Date (mm/dd/yyyy)' />\n                        <button onClick={onClick} type=\"submit\" class=\"col-auto btn btn-primary mb-3 float-end\">Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PlantCard;","import React from 'react';\nimport PlantCard from \"../PlantCard\"\n\nfunction SaveList (props) {\n\n        console.log(\"Props\", props);\n        return (\n            props.plantState.map((plant, index) =>\n            <PlantCard \n            key={plant._id}\n            number={index}\n            id={plant._id}\n            name={plant.name}\n            botanical_name={plant.botanical_name}\n            height={plant.height}\n            usda_zones={plant.usda_zones}\n            image={plant.image}\n            description={plant.description}\n            />\n            )\n        )\n    }\n\nexport default SaveList;","import React from 'react';\nimport \"../PlantSide/style.css\";\n\nfunction Sidebar() {\n    return (\n        <div>\n            <div class=\"list-group\">\n                <ul class=\"list-group list-group-flush\">\n                    <a href=\"/plants\" class=\"list-group-item list-group-item-action flex-column align-items-start\">\n                        <div class=\"d-flex w-100 justify-content-between\">\n                            <h5 class=\"mb-1\">Add Plant</h5>\n                        </div>\n                        <p class=\"mb-1\">Choose from a list of common garden plants to add to your personal collection here.</p>\n                    </a>\n                    <a href=\"#\" class=\"list-group-item list-group-item-action flex-column align-items-start disabled\">\n                        <div class=\"d-flex w-100 justify-content-between\">\n                            <h5 class=\"mb-1\">Add Custom Plant</h5>\n                            \n                        </div>\n                        <small>Feature Coming Soon!</small>\n                        <p class=\"mb-1\">Don't see your plant in our list? Add a custom plant to your collection here.</p>\n                        \n                    </a>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar;","import React, { useState, useEffect } from \"react\";\n// import PlantHeader from \"../components/PlantHeader\"\n// import AddButton from \"../components/PlantAdd\"\nimport { Container, Row, Col } from \"../components/Grid/index\";\nimport API from \"../utils/API\";\nimport SaveList from \"../components/SaveList\";\nimport Sidebar from \"../components/PlantSide\"\nimport { useUserContext } from \"../utils/globalState\";\n\nfunction PlantCards() {\n  const [state, dispatch] = useUserContext()\n  const [savedPlants, setSavedPlants] = useState([]);\n  const [currentUser, setCurrentUser] = useState([]);\n  const isLoggin = localStorage.getItem('isLoggin') === 'true';\n  const user = localStorage.getItem('user')\n\n\n  useEffect(() => {\n    authenticate();\n    getUser();\n    // getPlants();\n  }, [state]);\n\n  function getUser() {\n    API.getUser(user).then((res) => {\n      setCurrentUser(res.data);\n      setSavedPlants(res.data.plants);\n    });\n  }\n\n  function authenticate() {\n    if (!isLoggin) {\n      window.location.pathname = '/'\n    }\n  }\n\n  // function getPlants() {\n  //   currentUser.plants.map(plant => (\n  //     API.getPlant(plant._id)\n  //       .then(res => {\n  //         setSavedPlants([\n  //           ...savedPlants,\n  //           res.data\n  //         ])\n  //         console.log(\"This is the res from getPlants\", res);\n  //       })\n  //       .catch(err => {\n  //         console.log(\"This is the error\", err);\n  //       })\n  //   ))\n\n  // }\n\n  console.log(currentUser);\n\n  return (\n    <div>\n      <Container>\n        <Row>\n          <Col size=\"md-3\">\n            <div className = \"side-style\">\n            <Sidebar />\n            </div>\n            \n          </Col>\n          <Col size=\"md-9\">\n            {savedPlants.length ? (\n              <SaveList plantState={savedPlants}></SaveList>\n            ) : (\n              <h5>No results to display</h5>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default PlantCards;\n","import React, { useState } from 'react';\n\nfunction AllCardsItem (props) {    \n    const {image, name, botanical_name, height, usda_zones, description} = props\n    const [state, setState] = useState({ \n        bgColor: \"\",\n        color: \"\",\n        text: \"Save\"\n     })\n\n    const getStyle = () => {\n        if (state.text === \"Save\") {\n            setState({\n                bgColor: \"#A3C586\",\n                color: \"white\",\n                text: \"Saved\"\n            })\n        }\n        else {\n            setState({\n                bgColor: \"#5B7444\",\n                color: \"white\",\n                text: \"Save\"\n            })\n        }\n    }\n\n    const onClickFunction = () => {\n        props.savePlant(props)\n        getStyle();\n    }\n    \n        return (\n            <div>\n                <div className=\"card border-warning\">\n                    <div className=\"card-body plant-card\">\n                        <img src={image} style={{ maxWidth: \"100px\" }} />\n                        <h5 className=\"card-title\">{name}</h5>\n                        <h6 class=\"card-subtitle mb-2 text-muted\">{botanical_name}</h6>\n                        <p class=\"card-text\">Height: {height}</p>\n                        <p class=\"card-text\">USDA Zones: {usda_zones}</p>\n                        <p class=\"card-text\">{description}</p>\n                        <button onClick={onClickFunction} style={{ backgroundColor: state.bgColor, color: state.color }} className=\"btn\">{state.text}</button>\n                    </div>\n                </div>\n            </div>\n        )}\n\nexport default AllCardsItem","import React, { Component } from 'react'\nimport AllCardsItem from \"../AllCardsItem\";\n\nfunction AllCards (props) {\n\n        return (\n            props.plantState.map((plant) =>\n            <AllCardsItem\n            key={plant._id}\n            id={plant._id}\n            name={plant.name}\n            botanical_name={plant.botanical_name}\n            height={plant.height}\n            usda_zones={plant.usda_zones}\n            image={plant.image}\n            description={plant.description}\n            savePlant={props.savePlant}\n            />\n            )\n        )\n}\nexport default AllCards;","import React, { useState, useEffect } from \"react\";\nimport API from \"../utils/API\";\nimport { Container, Row, Col } from \"../components/Grid/index\";\nimport AllCards from \"../components/AllCards\";\nimport { useUserContext } from \"../utils/globalState\";\n\nfunction PlantsAll() {\n  const [allPlants, setAllPlants] = useState([]);\n  const [state, dispatch] = useUserContext();\n\n  useEffect(() => {\n    loadPlant();\n    // authenticate();\n  }, [state]);\n\n  function authenticate() {\n    // if (!isLoggin) {\n    //     window.location.pathname = '/'\n    // }\n  }\n  const userId = localStorage.getItem(\"user\");\n\n  function loadPlant() {\n    API.getPlants()\n      .then((res) => setAllPlants(res.data))\n\n      .catch((err) => console.log(err));\n  }\n\n  function savePlant(currentPlant) {\n    console.log(\"This is the current plant\", currentPlant);\n    // API.savePlant({\n    //     id: currentPlant.id,\n    //     name: currentPlant.name,\n    //     botanical_name: currentPlant.botanical_name,\n    //     height: currentPlant.height,\n    //     usda_zones: currentPlant.usda_zones,\n    //     image: currentPlant.image,\n    //     description: currentPlant.description\n    // })\n    //     .then(res => console.log(\"Successful POST to DB!\", res))\n    //     .catch(err => console.log(\"this is the error\", err));\n\n    API.updateUserPlant(userId, {\n      id: currentPlant.id,\n      name: currentPlant.name,\n      botanical_name: currentPlant.botanical_name,\n      height: currentPlant.height,\n      usda_zones: currentPlant.usda_zones,\n      image: currentPlant.image,\n      description: currentPlant.description,\n      next_water: ''\n    })\n      .then((res) => console.log(\"Successful POST to DB!\", res))\n      .catch((err) => console.log(\"this is the error\", err));\n  }\n\n  return (\n    <div>\n      <Container>\n        {allPlants.length ? (\n          <AllCards plantState={allPlants} savePlant={savePlant}></AllCards>\n        ) : (\n          <div>\n            <hr />\n            <p style={{ fontStyle: \"italic\" }}>No results to display</p>\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default PlantsAll;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Home from \"./pages/Home\";\nimport Landing from \"./pages/Landing\";\nimport Journal from \"./pages/Journal\";\nimport PlantCards from \"./pages/PlantCards\";\nimport PlantsAll from \"./pages/PlantsAll\";\nimport { UserProvider } from \"./utils/globalState\";\n\nfunction App() {\n  return (\n    <UserProvider>\n      <Router>\n        <div>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/journal\" component={Journal} />\n            <Route exact path=\"/cards\" component={PlantCards} />\n            <Route exact path=\"/plants\" component={PlantsAll} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    </UserProvider>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}